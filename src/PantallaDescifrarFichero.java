import algoritmos.RC4;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.IOException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.nio.CharBuffer;
import java.util.ArrayList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author joseluisllinaresanton
 */
public class PantallaDescifrarFichero extends javax.swing.JFrame {

    /**
     * Creates new form PantallaDesencriptacion
     */
    private String rutica;
    private String extension;
    private CharBuffer asciis;
    private RC4 RC4;
    
    public PantallaDescifrarFichero() {
        initComponents();
    }
    public PantallaDescifrarFichero(String rutaImagen) {
        setResizable(false);
        this.rutica=rutaImagen;
        setTitle("Descifrar");
        initComponents();
        VerImagen(rutaImagen);
    }

    
    public void VerImagen(String ruta)
    {
        BufferedImage imagenEscalada = EscalarImagen(label_imagen.getWidth(), label_imagen.getHeight(), ruta);
        label_imagen.setIcon(new ImageIcon((Image)imagenEscalada));
    }
    
    public BufferedImage EscalarImagen(int WIDTH, int HEIGHT, String filename)
    {
        BufferedImage bi = null;
        try
        {
            ImageIcon icono = new ImageIcon(filename);
            bi = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2d = (Graphics2D) bi.createGraphics();
            g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_QUALITY));
            g2d.drawImage(icono.getImage(), 0, 0, WIDTH, HEIGHT, null);
        }
        catch (Exception e)
        {
            return null;
        }
        return bi;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label_imagen = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        img_candado = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(51, 51, 51));

        label_imagen.setBackground(new java.awt.Color(204, 204, 204));

        jLabel6.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("Imagen codificada");

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 0, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Tipo de cifrado");

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        img_candado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/lock77.png"))); // NOI18N

        jRadioButton1.setText("AES");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setSelected(true);
        jRadioButton2.setText("RC4");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(img_candado)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1))
                .addGap(190, 190, 190))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(13, Short.MAX_VALUE)
                        .addComponent(jRadioButton1)
                        .addGap(24, 24, 24)
                        .addComponent(jRadioButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(img_candado)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        jPasswordField1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 0, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Clave");

        jButton1.setFont(new java.awt.Font("DejaVu Sans", 0, 11)); // NOI18N
        jButton1.setText("Descifrar Imagen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(74, 74, 74))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("El mensaje desencriptado se copiara al portapapeles");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(label_imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if(jRadioButton1.isSelected())
        {
            jRadioButton2.setSelected(false);
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if(jRadioButton2.isSelected())
        {
            jRadioButton1.setSelected(false);
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    public int valorDeClave(String clave)
    {
        int valor = 0;
        for(int i = 0; i<clave.length(); i++)
        {
            valor += clave.charAt(i);
        }
        return valor;
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        File imgPath = new File(rutica);
        String clave = jPasswordField1.getText();
        int valorClave = valorDeClave(clave);
        //Ahora hay que hacer la inversa. Sacar la cadena de la imagen.
        
        BufferedImage bufferedImage = null;
        
        try {
            bufferedImage = ImageIO.read(imgPath);
        } catch (IOException ex) {
            Logger.getLogger(PantallaDesencriptacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        int height = bufferedImage.getHeight();
        int width = bufferedImage.getWidth();

        WritableRaster raster = bufferedImage.getRaster();
        DataBufferByte data   = (DataBufferByte) raster.getDataBuffer();
        
        
        Random rnd = new Random();
        rnd.setSeed(data.getData().length+valorClave);  //la semilla será el valor de la clave + los datos.
        
       
        int i =0;
        String mensajeBinario = "";
        String mensaje="";
        Random posiH = new Random();
        posiH.setSeed(valorClave);
        int posicionTamTextH = posiH.nextInt((bufferedImage.getHeight() - 1) + 1)+ 1;
        posicionTamTextH = posicionTamTextH/2;
        
        Random posiW = new Random();
        posiW.setSeed(valorClave);
        int posicionTamTextW = posiW.nextInt((bufferedImage.getWidth() - 1) + 1)+ 1;
        posicionTamTextW = posicionTamTextW/2;
        
        Color mycolor = new Color(bufferedImage.getRGB(posicionTamTextH, posicionTamTextW));
        String ex1 = Integer.toBinaryString(mycolor.getBlue());
        String ex2 = Integer.toBinaryString(mycolor.getGreen());
        String ex3 = Integer.toBinaryString(mycolor.getRed());
        int charCode1 = Integer.parseInt(ex1, 2);
        int charCode2 = Integer.parseInt(ex2, 2);
        int charCode3 = Integer.parseInt(ex3, 2);
        String str1 = new Character((char)charCode1).toString();
        String str2 = new Character((char)charCode2).toString();
        String str3 = new Character((char)charCode3).toString();

        extension = "."+str3+str2+str1; //Sacamos la extensión.
                
        Color tamArchivo = new Color(bufferedImage.getRGB(posicionTamTextH+1, posicionTamTextW+1));
        int tamFichero = tamArchivo.getRed();
        ArrayList<Color> tamColores = new ArrayList<Color>();
        for(int totalPixeles = 0; totalPixeles<tamFichero; totalPixeles++)
        {
             Color ColorPixeles = new Color(bufferedImage.getRGB(posicionTamTextH+2+totalPixeles, posicionTamTextW+2+totalPixeles));
             tamColores.add(ColorPixeles);
        }
        int resultado =0;
        System.out.println(tamColores.get(0)+"colorsito");
        for(int sacarTamaño = 0; sacarTamaño< tamColores.size(); sacarTamaño++)
        {
             String valor ="";
             valor += Integer.toBinaryString(tamColores.get(sacarTamaño).getRed());
             if(!"0".equals(Integer.toBinaryString(tamColores.get(sacarTamaño).getGreen())))
             {
                 valor += Integer.toBinaryString(tamColores.get(sacarTamaño).getGreen());
             }
             if(!"0".equals(Integer.toBinaryString(tamColores.get(sacarTamaño).getBlue())))
             {
                 valor += Integer.toBinaryString(tamColores.get(sacarTamaño).getBlue());                 
             }             
             resultado = Integer.parseInt(valor, 2);
        }
        System.out.println(resultado+"tamaño en bytes encriptado."); //ya tenemos el puto tamaño del fichero encriptado.
        

        int p =0;
        while(p<resultado*8)
        {
            int posicion = rnd.nextInt(((data.getData().length-1) - 1) + 1)+ 1;
            mensajeBinario += getLSB(data.getData()[posicion]);
            p++;
        }
        int as =0;
        int pos =0;
        char[] caracteres = new char[mensajeBinario.length()/8];
        
        
        while(as<mensajeBinario.length())
        {
            String aux = mensajeBinario.substring(as, as+8);
                int charCode = Integer.parseInt(aux, 2);
                caracteres[pos] = asciis.get(charCode);
                System.out.println(caracteres[pos]);
                as+=8;
                pos++;
           /* if(aux.charAt(0)=='1') //significa que es negativo
            {
                String xor = "11111111";
                String convertido = Integer.toBinaryString(Integer.parseInt(aux, 2) ^ Integer.parseInt(xor, 2));
                //convertido = Integer.toBinaryString(Integer.parseInt(convertido,2) | Integer.parseInt("1",2));
                aux = convertido;
                
                int charCode = Integer.parseInt(aux, 2);
                caracteres[pos] = (char)(-charCode-1);
                as+=8;
                pos++;
            }
            else
            {*/ 
        }
        
        //String cadFinal = new String(bval);
                //Y despues desencriptarla
        String desencriptado="";
        try {
            if(jRadioButton1.isSelected())
            {
                
            }
            else
            {
                RC4 rc4 = new RC4(clave);
                String cad = new String(caracteres);
                
                char[] result = rc4.decrypt(cad.toCharArray());
                String resultadoFinal = new String(result);
                desencriptado = resultadoFinal;
            }
        } catch (Exception ex) {
            Logger.getLogger(PantallaDesencriptacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            FileOutputStream fos = new FileOutputStream("/Users/joseluisllinaresanton/Desktop/fichero1"+extension);
            fos.write(desencriptado.getBytes());
            fos.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PantallaDescifrarFichero.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PantallaDescifrarFichero.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "Finalizo.");
    }//GEN-LAST:event_jButton1ActionPerformed

    public char convertirBinarioALetra(String caracter)
    {
        int num=Integer.parseInt(caracter,2);
        return (char)num;
    }
    
    public char getLSB(byte s)
    {
     String binario = byteABinario(s);  
     return binario.charAt(binario.length()-1);
    }
    
    public String byteABinario(byte s)
    {
            int i2 = s & 0xFF;
            String binario = "";
            for (int i = 0; i < 8; i++)
            {
                binario = "" + (i2 % 2) + binario;
                i2 = i2/ 2;
            }
            return binario;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaDesencriptacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaDesencriptacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaDesencriptacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaDesencriptacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaDesencriptacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel img_candado;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JLabel label_imagen;
    // End of variables declaration//GEN-END:variables
}
